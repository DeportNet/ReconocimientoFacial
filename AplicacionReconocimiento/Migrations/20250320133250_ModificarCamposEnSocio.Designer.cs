// <auto-generated />
using System;
using DeportNetReconocimiento.BD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeportNetReconocimiento.Migrations
{
    [DbContext(typeof(BdContext))]
    [Migration("20250320133250_ModificarCamposEnSocio")]
    partial class ModificarCamposEnSocio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("DeportNetReconocimiento.BD.Entidades.AccesoSocio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int?>("AccesoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IsSuccessful")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccesoId");

                    b.ToTable("accesos_socios", (string)null);
                });

            modelBuilder.Entity("DeportNetReconocimiento.BD.Entidades.Membresia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdDx")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_dx");

                    b.Property<string>("IsSaleItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("membresias", (string)null);
                });

            modelBuilder.Entity("DeportNetReconocimiento.BD.Entidades.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<string>("AddressFloor")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("address_floor");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("birth_date");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("card_number");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("cellphone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasColumnName("gender");

                    b.Property<int>("IdDx")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_dx");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("id_number");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("image_url");

                    b.Property<string>("IsActive")
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasColumnName("is_active");

                    b.Property<string>("IsValid")
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasColumnName("is_valid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.ToTable("socios", (string)null);
                });

            modelBuilder.Entity("DeportNetReconocimiento.Modelo.Acceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ActiveBranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Accesos");
                });

            modelBuilder.Entity("DeportNetReconocimiento.Modelo.Articulo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("IdDx")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_dx");

                    b.Property<string>("IsSaleItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("articulos", (string)null);
                });

            modelBuilder.Entity("DeportNetReconocimiento.Modelo.ConfiguracionDeAcceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CardLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EndCharacter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondStartCharacter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartCharacter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("configuracion_de_acceso", (string)null);
                });

            modelBuilder.Entity("DeportNetReconocimiento.BD.Entidades.AccesoSocio", b =>
                {
                    b.HasOne("DeportNetReconocimiento.Modelo.Acceso", "Acceso")
                        .WithMany("MemberAccess")
                        .HasForeignKey("AccesoId");

                    b.Navigation("Acceso");
                });

            modelBuilder.Entity("DeportNetReconocimiento.Modelo.Acceso", b =>
                {
                    b.Navigation("MemberAccess");
                });
#pragma warning restore 612, 618
        }
    }
}
